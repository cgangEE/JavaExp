import javax.swing.*;

import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.net.*;
import java.util.*;


public class Client {
	static Socket socket = null;
	static DataInputStream in = null;
	static DataOutputStream out = null;
	static Window window = null;
	void send(){
		try {
			out.writeUTF(window.input.getText());
			window.input.setText("");
		} catch (IOException e) {}
	}
	public static void main(String args[]){
		
		try{
			socket = new Socket("localhost", 12306);
			in = new DataInputStream(socket.getInputStream());
			out = new DataOutputStream(socket.getOutputStream());
		}
		catch (IOException e){
			System.out.println(e);
		}
			
		
		if (socket != null){
			window = new Window();
		}
	}
}

class Window{
	static JFrame client = null;
	static JTextArea talk = null;
	static JTextField input = null;
	static JButton send = null;
	Window(){
		if (client == null){
			client = new JFrame("Client");
		
			client.setLayout(new BorderLayout());
		
			talk = new JTextArea("", 20, 40);
			input = new JTextField(40);
			JButton send = new JButton("send");
		
			send.addActionListener(new ButtonHandler());
			
			client.add(talk, BorderLayout.NORTH);
			client.add(input,  BorderLayout.CENTER);
			client.add(send, BorderLayout.SOUTH);
			
			client.setSize(500, 500);
			
			client.pack();
			client.setVisible(true);
			
			Update_thread t = new Update_thread(you);
			t.start();
		}
	}		
}

class Update_thread extends Thread {
	Socket socket = null;
	DataInputStream in = null;
	DataOutputStream out = null;

	Update_thread(Socket t) {
		socket = t;
		try {
			in = new DataInputStream(socket.getInputStream());
			out = new DataOutputStream(socket.getOutputStream());
		} catch (IOException e) {
		}
	}

	public void run() {
		while (true) {

			try {
				String s;
				s = in.readUTF();
				System.out.println(s);
				if (s.equals("bye")) {
					socket.close();
					break;
				}
			} catch (IOException e) {
				break;
			}

		}
	}
}

class ButtonHandler implements ActionListener{
	public void actionPerformed(ActionEvent e){
		new Client().send();
	}
}